// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SINPRO.Entity;

namespace SINPRO.Migrations
{
    [DbContext(typeof(SINContext))]
    [Migration("20220117171555_add-text")]
    partial class addtext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("SINPRO.Entity.DataModels.mBanner", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("inserted")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("link")
                        .HasColumnType("longtext");

                    b.Property<string>("photo")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("mBanner");
                });

            modelBuilder.Entity("SINPRO.Entity.DataModels.mMatch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("firstTimeName")
                        .HasColumnType("longtext");

                    b.Property<string>("firstTimePhoto")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("inserted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("matchDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("matchTime")
                        .HasColumnType("int");

                    b.Property<string>("secondTimeName")
                        .HasColumnType("longtext");

                    b.Property<string>("secondTimePhoto")
                        .HasColumnType("longtext");

                    b.Property<string>("textDescription")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("mMatch");
                });

            modelBuilder.Entity("SINPRO.Entity.DataModels.mNew", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("discription")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("inserted")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("photo")
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("mNew");
                });

            modelBuilder.Entity("SINPRO.Entity.DataModels.mRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("inserted")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("parentId")
                        .HasColumnType("int");

                    b.Property<string>("resourceName")
                        .HasColumnType("longtext");

                    b.Property<bool>("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("mRole");

                    b.HasData(
                        new
                        {
                            id = 1,
                            inserted = new DateTime(2022, 1, 17, 22, 15, 55, 213, DateTimeKind.Local).AddTicks(9272),
                            parentId = 1,
                            resourceName = "admin",
                            status = true,
                            updated = new DateTime(2022, 1, 17, 22, 15, 55, 213, DateTimeKind.Local).AddTicks(9530)
                        },
                        new
                        {
                            id = 2,
                            inserted = new DateTime(2022, 1, 17, 22, 15, 55, 214, DateTimeKind.Local).AddTicks(48),
                            parentId = 2,
                            resourceName = "user",
                            status = true,
                            updated = new DateTime(2022, 1, 17, 22, 15, 55, 214, DateTimeKind.Local).AddTicks(52)
                        });
                });

            modelBuilder.Entity("SINPRO.Entity.DataModels.mUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("fName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("inserted")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("refershTokenExpiration")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("refreshToken")
                        .HasColumnType("longtext");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<string>("sName")
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("statusDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("roleId");

                    b.ToTable("mUser");

                    b.HasData(
                        new
                        {
                            id = 1,
                            email = "admin@gmail.com",
                            inserted = new DateTime(2022, 1, 17, 22, 15, 55, 214, DateTimeKind.Local).AddTicks(9324),
                            password = "DDWjBLfJgK1/V+Owzhs/E9yvyP/YGaFnsFpbECWHh/cuafCO",
                            roleId = 1,
                            status = 1,
                            statusDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updated = new DateTime(2022, 1, 17, 22, 15, 55, 214, DateTimeKind.Local).AddTicks(9556)
                        });
                });

            modelBuilder.Entity("SINPRO.Entity.DataModels.mUser", b =>
                {
                    b.HasOne("SINPRO.Entity.DataModels.mRole", "mRole")
                        .WithMany("mUser")
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mRole");
                });

            modelBuilder.Entity("SINPRO.Entity.DataModels.mRole", b =>
                {
                    b.Navigation("mUser");
                });
#pragma warning restore 612, 618
        }
    }
}
